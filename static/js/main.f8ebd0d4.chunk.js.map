{"version":3,"sources":["components/newOrPreowned.jsx","components/dieselOrGas.jsx","components/manufacturer.jsx","components/floorplan.jsx","components/model.jsx","components/stepper.jsx","pages/home.jsx","App.js","serviceWorker.js","index.js","img/white-logo.png"],"names":["NewOrPreowned","state","value","sessionStorage","getItem","handleChange","event","_this","setState","target","setItem","_this2","this","classes","props","handleToUpdate","handlerToUpdate","console","log","react_default","a","createElement","Paper_default","className","root","elevation","Typography_default","Object","defineProperty","component","variant","FormControl_default","RadioGroup_default","aria-label","name","onChange","row","FormControlLabel_default","control","Radio_default","color","label","labelPlacement","React","Component","withStyles","theme","objectSpread","mixins","gutters","padding","spacing","unit","DieselOrGas","Manufacturer","newOrPreowned","dieselOrGas","manufacturer","keys","MakesModels","map","make","idx","key","Floorplan","model","year","floorplans","floorplan","handleChangeModel","Model","models","handleChangeYear","HorizontalLinearStepper","activeStep","skipped","Set","nextStepDisabled","isNewOrPreowned","step","isStepOptional","handleNext","isStepSkipped","values","delete","setNextStepDisabled","handleBack","handleEnableNextStep","handleSkip","Error","add","handleReset","getSteps","getStepContent","components_manufacturer","components_model","components_floorplan","has","steps","Stepper_default","index","labelProps","optional","completed","Step_default","assign","StepLabel_default","length","instructions","Button_default","onClick","button","disabled","width","marginRight","marginTop","marginBottom","Home","stepper","App","src","logo","alt","home","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.f8ebd0d4.chunk.js","sourcesContent":["import React from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      ...theme.mixins.gutters(),\r\n      padding: theme.spacing.unit * 2\r\n    },\r\n  });\r\n\r\nclass NewOrPreowned extends React.Component {\r\n  \r\n  state = {\r\n    value: sessionStorage.getItem(\"newOrPreowned\"),\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ value: event.target.value });\r\n    sessionStorage.setItem(\"newOrPreowned\", event.target.value);    \r\n  };\r\n\r\n  render() {    \r\n    const { classes } = this.props;\r\n    var handleToUpdate  = this.props.handlerToUpdate;\r\n    console.log(sessionStorage.getItem(\"newOrPreowned\"));\r\n    return (\r\n      <Paper className={classes.root} elevation={1}>\r\n        <Typography component={'span'}  variant=\"h5\" component=\"h3\">\r\n            Select New or Pre-Owned\r\n        </Typography>              \r\n        <FormControl component=\"fieldset\">\r\n            <RadioGroup\r\n            aria-label=\"position\"\r\n            name=\"position\"\r\n            value={this.state.value}\r\n            onChange={() => handleToUpdate(this.handleChange)}\r\n            row\r\n            >            \r\n            <FormControlLabel\r\n                value=\"new\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"New\"\r\n                labelPlacement=\"start\"\r\n                onChange={this.handleChange}\r\n            />          \r\n            <FormControlLabel\r\n                value=\"preowned\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"Pre-Owned\"\r\n                labelPlacement=\"start\"\r\n                onChange={this.handleChange}\r\n            />\r\n            </RadioGroup>\r\n        </FormControl>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\nNewOrPreowned.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\nexport default withStyles(styles)(NewOrPreowned);","import React from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      ...theme.mixins.gutters(),\r\n      padding: theme.spacing.unit * 2\r\n    },\r\n  });\r\n\r\nclass DieselOrGas extends React.Component {\r\n  state = {\r\n    value: sessionStorage.getItem('dieselOrGas'),\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ value: event.target.value });\r\n    sessionStorage.setItem(\"dieselOrGas\", event.target.value);   \r\n  };\r\n\r\n  render() {    \r\n    const { classes } = this.props;\r\n    var handleToUpdate  = this.props.handlerToUpdate;\r\n    return (\r\n      <Paper className={classes.root} elevation={1}>\r\n        <Typography variant=\"h5\" component=\"h3\">\r\n            Select Diesel or Gas\r\n        </Typography>              \r\n        <FormControl component=\"fieldset\">\r\n          <RadioGroup\r\n            aria-label=\"position\"\r\n            name=\"position\"\r\n            value={this.state.value}\r\n            onChange={() =>  handleToUpdate(this.handleChange)}\r\n            row\r\n          >            \r\n            <FormControlLabel\r\n                value=\"diesel\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"Diesel\"\r\n                labelPlacement=\"start\"\r\n                onChange={this.handleChange}\r\n            />          \r\n            <FormControlLabel\r\n                value=\"gas\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"Gas\"\r\n                labelPlacement=\"start\"\r\n                onChange={this.handleChange}\r\n            />\r\n            </RadioGroup>\r\n        </FormControl>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\nDieselOrGas.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\nexport default withStyles(styles)(DieselOrGas);","import React from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport MakesModels from '../data/makesModels.json';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      ...theme.mixins.gutters(),\r\n      padding: theme.spacing.unit * 2\r\n    },\r\n  });\r\n\r\nclass Manufacturer extends React.Component {  \r\n  state = {\r\n    value: sessionStorage.getItem('manufacturer'),\r\n    newOrPreowned: sessionStorage.getItem(\"newOrPreowned\"),\r\n    dieselOrGas: sessionStorage.getItem(\"dieselOrGas\")\r\n  };\r\n  \r\n  handleChange = event => {\r\n    this.setState({ value: event.target.value });\r\n    sessionStorage.setItem(\"manufacturer\", event.target.value)\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const handleToUpdate = this.props.handlerToUpdate;   \r\n    if (this.state.dieselOrGas) {\r\n      const manufacturer = Object.keys(MakesModels[this.state.dieselOrGas]).map((make, idx) => {            \r\n          return (                \r\n              <FormControlLabel\r\n                  key={idx}\r\n                  value={make}\r\n                  control={<Radio color=\"primary\" />}\r\n                  label={make}\r\n                  labelPlacement=\"start\"\r\n                  onChange={this.handleChange}\r\n              />\r\n          )   \r\n      })        \r\n      return (\r\n        <Paper className={classes.root} elevation={1}>\r\n          <Typography component={'span'} variant=\"h5\" component=\"h3\">\r\n              Select Manufacturer\r\n          </Typography>\r\n          <FormControl component=\"fieldset\">\r\n              <RadioGroup\r\n                  aria-label=\"manufacturer\"\r\n                  name=\"manufacturer\"\r\n                  value={this.state.value}\r\n                  onChange={() => handleToUpdate(this.handleChange)}\r\n                  row\r\n                  >\r\n                  {manufacturer}            \r\n              </RadioGroup>\r\n          </FormControl>\r\n        </Paper>\r\n      );\r\n    }\r\n  }\r\n}\r\nManufacturer.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\nexport default withStyles(styles)(Manufacturer);","import React from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport MakesModels from '../data/makesModels.json';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        ...theme.mixins.gutters(),\r\n        padding: theme.spacing.unit * 2,\r\n    },\r\n});\r\n\r\nclass Floorplan extends React.Component {  \r\n    state = {\r\n        dieselOrGas: sessionStorage.getItem(\"dieselOrGas\"),      \r\n        value: sessionStorage.getItem(\"floorplan\"), \r\n        manufacturer: sessionStorage.getItem(\"manufacturer\"),\r\n        model: sessionStorage.getItem(\"model\"),\r\n        newOrPreowned: sessionStorage.getItem(\"newOrPreowned\"),\r\n        year: sessionStorage.getItem('year')\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({ value: event.target.value });\r\n        sessionStorage.setItem(\"floorplan\", event.target.value)\r\n      };\r\n\r\n    render() {\r\n        const { classes } = this.props;        \r\n        const handleToUpdate = this.props.handlerToUpdate;   \r\n        \r\n        if (this.state.dieselOrGas &&\r\n            this.state.manufacturer &&\r\n            this.state.year &&\r\n            this.state.model) {\r\n            const floorplans = MakesModels[this.state.dieselOrGas][this.state.manufacturer][this.state.year][this.state.model].map((floorplan, idx) => {                \r\n                return (    \r\n                    <FormControlLabel\r\n                        key={idx}\r\n                        value={floorplan}\r\n                        control={<Radio color=\"primary\" />}\r\n                        label={floorplan}\r\n                        labelPlacement=\"start\"\r\n                        onChange={this.handleChangeModel}\r\n                    />\r\n                );\r\n                \r\n            })            \r\n            return (\r\n                \r\n                <Paper className={classes.root} elevation={1}>\r\n                    <Typography component={'span'} variant=\"h5\" component=\"h3\">\r\n                        Select Floorplan\r\n                    </Typography>                \r\n                    <FormControl component=\"fieldset\">\r\n                        <RadioGroup\r\n                        aria-label=\"floorplan\"\r\n                        name=\"floorplan\"\r\n                        value={this.state.value}\r\n                        onChange={this.handleChange}\r\n                        row\r\n                        >\r\n                        {floorplans}            \r\n                    </RadioGroup>\r\n                </FormControl>\r\n                </Paper>\r\n            );\r\n        }\r\n    }\r\n}\r\nFloorplan.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\nexport default withStyles(styles)(Floorplan);","import React from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport MakesModels from '../data/makesModels.json';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        ...theme.mixins.gutters(),\r\n        padding: theme.spacing.unit * 2,\r\n    },\r\n});\r\n\r\nclass Model extends React.Component {  \r\n    state = {\r\n      dieselOrGas: sessionStorage.getItem(\"dieselOrGas\"),      \r\n      manufacturer: sessionStorage.getItem(\"manufacturer\"),\r\n      model: sessionStorage.getItem(\"model\"),\r\n      models: sessionStorage.getItem(\"dieselOrGas\") && sessionStorage.getItem(\"manufacturer\") && sessionStorage.getItem('year') ?\r\n        Object.keys(MakesModels[sessionStorage.getItem(\"dieselOrGas\")][sessionStorage.getItem(\"manufacturer\")][sessionStorage.getItem('year')]).map((model, idx) => {\r\n            return (\r\n                <FormControlLabel\r\n                    key={idx}\r\n                    value={model}\r\n                    control={<Radio color=\"primary\" />}\r\n                    label={model}\r\n                    labelPlacement=\"start\"\r\n                    onChange={this.handleChangeModel}\r\n                />\r\n            )\r\n        }) : '',\r\n      newOrPreowned: sessionStorage.getItem(\"newOrPreowned\"),\r\n      year: sessionStorage.getItem('year')\r\n    };\r\n\r\n    handleChangeYear = event => {\r\n        if (this.state.dieselOrGas &&\r\n            this.state.manufacturer) {\r\n            this.setState({ year: event.target.value });\r\n            sessionStorage.setItem(\"year\", event.target.value)        \r\n            this.setState({ \r\n                models:  MakesModels[this.state.dieselOrGas][this.state.manufacturer][event.target.value].map((model, idx) => {\r\n                    return (\r\n                        <FormControlLabel\r\n                            key={idx}\r\n                            value={model}\r\n                            control={<Radio color=\"primary\" />}\r\n                            label={model}\r\n                            labelPlacement=\"start\"\r\n                            onChange={this.handleChangeModel}\r\n                        />\r\n                    )\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChangeModel = event => {\r\n        this.setState({ model: event.target.value });\r\n        sessionStorage.setItem(\"model\", event.target.value)\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;        \r\n        const handleToUpdate = this.props.handlerToUpdate;    \r\n        return (\r\n        <Paper className={classes.root} elevation={1}>\r\n            <Typography component={'span'} variant=\"h5\" component=\"h3\">\r\n                Select your Model...'\r\n            </Typography>\r\n             <FormControl component=\"fieldset\">\r\n                <RadioGroup\r\n                    aria-label=\"year\"\r\n                    name=\"year\"\r\n                    value={this.state.year}\r\n                    onChange={this.handleChangeYear}\r\n                    row\r\n                >\r\n                <FormControlLabel\r\n                    value=\"2019\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label=\"2019\"\r\n                    labelPlacement=\"start\"\r\n                />          \r\n                <FormControlLabel\r\n                    value=\"2018\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label=\"2018\"\r\n                    labelPlacement=\"start\"\r\n                />\r\n                </RadioGroup>                \r\n            </FormControl><br/>\r\n            <FormControl component=\"fieldset\">\r\n                <RadioGroup \r\n                    aria-label=\"model\"\r\n                    name=\"model\"\r\n                    value={this.state.model}\r\n                    onChange={this.handleChangeModel}\r\n                    row\r\n                >\r\n                    {this.state.models}\r\n                </RadioGroup>\r\n            </FormControl>\r\n        </Paper>\r\n        );\r\n    }\r\n    \r\n}\r\nModel.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\nexport default withStyles(styles)(Model);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NewOrPreowned from './newOrPreowned';\r\nimport DieselOrGas from './dieselOrGas';\r\nimport Manufacturer from './manufacturer';\r\nimport Floorplan from './floorplan';\r\nimport Model from './model';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '90%',\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing.unit,\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing.unit,\r\n    marginBottom: theme.spacing.unit,\r\n  },\r\n});\r\n\r\nclass HorizontalLinearStepper extends React.Component {\r\n  state = {\r\n    activeStep: 0,\r\n    skipped: new Set(),\r\n    nextStepDisabled: sessionStorage.getItem(\"newOrPreowned\") === null\r\n  };\r\n\r\n  isNewOrPreowned = step => {\r\n    return step === 0;\r\n  }\r\n  isStepOptional = step => {\r\n    return false;\r\n    //return step === 1;\r\n  };\r\n\r\n  handleNext = () => {\r\n    const { activeStep } = this.state;\r\n    let { skipped } = this.state;\r\n    if (this.isStepSkipped(activeStep)) {\r\n      skipped = new Set(skipped.values());\r\n      skipped.delete(activeStep);\r\n    }\r\n    this.setState({\r\n      activeStep: activeStep + 1,\r\n      skipped,\r\n    });\r\n    this.setNextStepDisabled(activeStep + 1)\r\n  };\r\n\r\n  handleBack = () => {\r\n    this.setState(state => ({\r\n      activeStep: state.activeStep - 1,\r\n    }));\r\n  };\r\n\r\n  handleEnableNextStep = () => {\r\n    this.setState(state => ({\r\n      nextStepDisabled: false\r\n    }));\r\n  }\r\n\r\n  handleSkip = () => {\r\n    const { activeStep } = this.state;\r\n    if (!this.isStepOptional(activeStep)) {\r\n      // You probably want to guard against something like this,\r\n      // it should never occur unless someone's actively trying to break something.\r\n      throw new Error(\"You can't skip a step that isn't optional.\");\r\n    }\r\n\r\n    this.setState(state => {\r\n      const skipped = new Set(state.skipped.values());\r\n      skipped.add(activeStep);\r\n      return {\r\n        activeStep: state.activeStep + 1,\r\n        skipped,\r\n      };\r\n    });\r\n  };\r\n\r\n  handleReset = () => {\r\n    this.setState({\r\n      activeStep: 0,\r\n    });\r\n  };\r\n\r\n\r\n  isStepSkipped(step) {\r\n    return this.state.skipped.has(step);\r\n  }\r\n\r\n  setNextStepDisabled(step) {\r\n    switch (step) {\r\n      case 0:\r\n        if (!this.state.nextStepDisabled && sessionStorage.getItem(\"newOrPreowned\") === null) {\r\n          this.setState({nextStepDisabled: true})\r\n        } \r\n        else if (this.state.nextStepDisabled && sessionStorage.getItem(\"newOrPreowned\") !== null) {\r\n          this.setState({nextStepDisabled: false})\r\n        }               \r\n        break;\r\n      case 1:        \r\n        if (!this.state.nextStepDisabled && sessionStorage.getItem(\"dieselOrGas\") === null) {         \r\n          this.setState({nextStepDisabled: true})\r\n        }\r\n        else if (this.state.nextStepDisabled && sessionStorage.getItem(\"dieselOrGas\") !== null) {\r\n          this.setState({nextStepDisabled: false})\r\n        }\r\n        break;\r\n      case 2:      \r\n        if (!this.state.nextStepDisabled && sessionStorage.getItem(\"manufacturer\") === null) {\r\n           this.setState({nextStepDisabled: true})\r\n        }\r\n        else if (this.state.nextStepDisabled && sessionStorage.getItem(\"manufacturer\") !== null) {\r\n          this.setState({nextStepDisabled: false})\r\n        }\r\n        break\r\n      case 3:\r\n        if (!this.state.nextStepDisabled && sessionStorage.getItem(\"model\") === null) {\r\n          this.setState({nextStepDisabled: true})\r\n        }\r\n        else if (this.state.nextStepDisabled && sessionStorage.getItem(\"model\") !== null) {\r\n          this.setState({nextStepDisabled: false})\r\n        }\r\n        break        \r\n      default: return false\r\n    }\r\n  }\r\n  getSteps = () => {\r\n    return ['Select New or Pre-Order', 'Select Diesel or Gas', 'Which Manufacturer', 'Select your Model', 'Select Floorplan'];\r\n  }\r\n\r\n\r\n  getStepContent = (step) => {\r\n    switch (step) {\r\n      case 0:\r\n        return <NewOrPreowned handlerToUpdate = {this.handleEnableNextStep} />;\r\n      case 1:\r\n        return <DieselOrGas handlerToUpdate = {this.handleEnableNextStep} />;\r\n      case 2:\r\n        return <Manufacturer handlerToUpdate = {this.handleEnableNextStep} />;\r\n      case 3:\r\n        return <Model handlerToUpdate = {this.handleEnableNextStep} />;\r\n      case 4:\r\n        return <Floorplan handlerToUpdate = {this.handleEnableNextStep} />\r\n      default:\r\n        return 'Select Floorplan'\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const steps = this.getSteps();\r\n    const { activeStep } = this.state;   \r\n    //this.setNextStepDisabled(activeStep)\r\n    return (\r\n      <div className={classes.root}>\r\n        <Stepper activeStep={activeStep} >\r\n          {steps.map((label, index) => {\r\n            const props = {};\r\n            const labelProps = {};\r\n            if (this.isStepOptional(index)) {\r\n              labelProps.optional = <Typography variant=\"caption\">Optional</Typography>;\r\n            }\r\n            if (this.isStepSkipped(index)) {\r\n              props.completed = false;\r\n            }\r\n            // if (this.isNewOrPreowned(index)) {\r\n            //   form = <NewOrPreowned />\r\n            // }\r\n            return (\r\n              <Step key={label} {...props}>\r\n                <StepLabel {...labelProps}>{label}</StepLabel>                \r\n              </Step>\r\n            );\r\n          })}\r\n        </Stepper>\r\n        <div>\r\n          {activeStep === steps.length ? (\r\n            <div>\r\n              <Typography component={'span'}  className={classes.instructions}>\r\n                All steps completed - you&apos;re finished\r\n              </Typography>\r\n              <Button onClick={this.handleReset} className={classes.button}>\r\n                Reset\r\n              </Button>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <Typography component={'span'}  className={classes.instructions}>{this.getStepContent(activeStep)}</Typography>\r\n              <div>\r\n                <Button\r\n                  disabled={activeStep === 0}\r\n                  onClick={this.handleBack}\r\n                  className={classes.button}\r\n                >\r\n                  Back\r\n                </Button>\r\n                {this.isStepOptional(activeStep) && (\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={this.handleSkip}\r\n                    className={classes.button}\r\n                  >\r\n                    Skip\r\n                  </Button>\r\n                )}\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={this.handleNext}\r\n                  className={classes.button}\r\n                  disabled={this.state.nextStepDisabled}\r\n                >\r\n                  {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nHorizontalLinearStepper.propTypes = {\r\n  classes: PropTypes.object,\r\n};\r\n\r\nexport default withStyles(styles)(HorizontalLinearStepper);","import React, { Component } from 'react';\r\nimport Stepper from '../components/stepper';\r\n\r\nclass Home extends Component {\r\n    render() {\r\n      return (\r\n        <div>\r\n          <Stepper />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default Home;","import React, { Component } from 'react';\nimport logo from './img/white-logo.png';\nimport './App.css';\nimport Home from './pages/home';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        </header>\n        <Home/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/white-logo.05c454ef.png\";"],"sourceRoot":""}