{"version":3,"sources":["img/white-logo.png","components/newOrPreowned.jsx","components/dieselOrGas.jsx","components/manufacturer.jsx","components/floorplan.jsx","components/model.jsx","components/stepper.jsx","pages/home.jsx","pages/card.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","NewOrPreowned","state","value","sessionStorage","getItem","handleChange","event","_this","setState","target","setItem","_this2","this","classes","props","handleToUpdate","handlerToUpdate","console","log","react_default","a","createElement","Paper_default","className","root","elevation","Typography_default","component","variant","FormControl_default","RadioGroup_default","aria-label","name","onChange","row","FormControlLabel_default","control","Radio_default","color","label","labelPlacement","React","Component","withStyles","theme","Object","objectSpread","mixins","gutters","padding","spacing","unit","DieselOrGas","Manufacturer","newOrPreowned","dieselOrGas","manufacturer","keys","MakesModels","map","make","idx","key","Floorplan","model","year","floorplans","floorplan","Model","models","handleChangeModel","handleChangeYear","HorizontalLinearStepper","activeStep","skipped","Set","isNewOrPreowned","step","isStepOptional","handleCard","history","push","replace","handleNext","isStepSkipped","values","delete","setNextStepDisabled","handleBack","handleEnableNextStep","nextStepDisabled","handleSkip","Error","add","handleReset","getSteps","getStepContent","components_manufacturer","components_model","components_floorplan","has","steps","Stepper_default","index","labelProps","optional","completed","Step_default","assign","StepLabel_default","length","instructions","Button_default","onClick","button","disabled","withRouter","width","marginRight","marginTop","marginBottom","Home","stepper","Card","exteriorColor","interiorColor","checkedBed","checkedHeater","defineProperty","handleChangeSwitch","checked","parser","document","href","window","location","pathname","split","splice","paths","path","trim","autoComplete","Grid_default","container","item","xs","paper","formControl","InputLabel_default","htmlFor","Select_default","inputProps","id","MenuItem_default","FormLabel_default","Switch_default","switchBase","iOSSwitchBase","bar","iOSBar","icon","iOSIcon","iconChecked","iOSIconChecked","iOSChecked","disableRipple","margin","minWidth","selectEmpty","colorSwitchBase","purple","&$colorChecked","& + $colorBar","backgroundColor","colorBar","colorChecked","&$iOSChecked","palette","common","white","& + $iOSBar","blue","transition","transitions","create","duration","shortest","easing","sharp","transform","opacity","border","borderRadius","height","marginLeft","borderColor","pink","boxShadow","shadows","App","BrowserRouter","src","logo","alt","Route","exact","Boolean","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.def1db81.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/white-logo.05c454ef.png\";","import React from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      ...theme.mixins.gutters(),\r\n      padding: theme.spacing.unit * 2\r\n    },\r\n  });\r\n\r\nclass NewOrPreowned extends React.Component {\r\n  \r\n  state = {\r\n    value: sessionStorage.getItem(\"newOrPreowned\"),\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ value: event.target.value });\r\n    sessionStorage.setItem(\"newOrPreowned\", event.target.value);    \r\n  };\r\n\r\n  render() {    \r\n    const { classes } = this.props;\r\n    var handleToUpdate  = this.props.handlerToUpdate;\r\n    console.log(sessionStorage.getItem(\"newOrPreowned\"));\r\n    return (\r\n      <Paper className={classes.root} elevation={1}>\r\n        <Typography component={'span'}  variant=\"h5\" >\r\n            Select New or Pre-Owned\r\n        </Typography>              \r\n        <FormControl component=\"fieldset\">\r\n            <RadioGroup\r\n            aria-label=\"position\"\r\n            name=\"position\"\r\n            value={this.state.value}\r\n            onChange={() => handleToUpdate(this.handleChange)}\r\n            row\r\n            >            \r\n            <FormControlLabel\r\n                value=\"new\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"New\"\r\n                labelPlacement=\"start\"\r\n                onChange={this.handleChange}\r\n            />          \r\n            <FormControlLabel\r\n                value=\"preowned\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"Pre-Owned\"\r\n                labelPlacement=\"start\"\r\n                onChange={this.handleChange}\r\n            />\r\n            </RadioGroup>\r\n        </FormControl>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\nNewOrPreowned.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\nexport default withStyles(styles)(NewOrPreowned);","import React from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      ...theme.mixins.gutters(),\r\n      padding: theme.spacing.unit * 2\r\n    },\r\n  });\r\n\r\nclass DieselOrGas extends React.Component {\r\n  state = {\r\n    value: sessionStorage.getItem('dieselOrGas'),\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ value: event.target.value });\r\n    sessionStorage.setItem(\"dieselOrGas\", event.target.value);   \r\n  };\r\n\r\n  render() {    \r\n    const { classes } = this.props;\r\n    var handleToUpdate  = this.props.handlerToUpdate;\r\n    return (\r\n      <Paper className={classes.root} elevation={1}>\r\n        <Typography variant=\"h5\" component=\"h3\">\r\n            Select Diesel or Gas\r\n        </Typography>              \r\n        <FormControl component=\"fieldset\">\r\n          <RadioGroup\r\n            aria-label=\"position\"\r\n            name=\"position\"\r\n            value={this.state.value}\r\n            onChange={() =>  handleToUpdate(this.handleChange)}\r\n            row\r\n          >            \r\n            <FormControlLabel\r\n                value=\"diesel\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"Diesel\"\r\n                labelPlacement=\"start\"\r\n                onChange={this.handleChange}\r\n            />          \r\n            <FormControlLabel\r\n                value=\"gas\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"Gas\"\r\n                labelPlacement=\"start\"\r\n                onChange={this.handleChange}\r\n            />\r\n            </RadioGroup>\r\n        </FormControl>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\nDieselOrGas.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\nexport default withStyles(styles)(DieselOrGas);","import React from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport MakesModels from '../data/makesModels.json';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      ...theme.mixins.gutters(),\r\n      padding: theme.spacing.unit * 2\r\n    },\r\n  });\r\n\r\nclass Manufacturer extends React.Component {  \r\n  state = {\r\n    value: sessionStorage.getItem('manufacturer'),\r\n    newOrPreowned: sessionStorage.getItem(\"newOrPreowned\"),\r\n    dieselOrGas: sessionStorage.getItem(\"dieselOrGas\")\r\n  };\r\n  \r\n  handleChange = event => {\r\n    this.setState({ value: event.target.value });\r\n    sessionStorage.setItem(\"manufacturer\", event.target.value)\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const handleToUpdate = this.props.handlerToUpdate;   \r\n    if (this.state.dieselOrGas) {\r\n      const manufacturer = Object.keys(MakesModels[this.state.dieselOrGas]).map((make, idx) => {            \r\n          return (                \r\n              <FormControlLabel\r\n                  key={idx}\r\n                  value={make}\r\n                  control={<Radio color=\"primary\" />}\r\n                  label={make}\r\n                  labelPlacement=\"start\"\r\n                  onChange={this.handleChange}\r\n              />\r\n          )   \r\n      })        \r\n      return (\r\n        <Paper className={classes.root} elevation={1}>\r\n          <Typography component={'span'} variant=\"h5\" >\r\n              Select Manufacturer\r\n          </Typography>\r\n          <FormControl component=\"fieldset\">\r\n              <RadioGroup\r\n                  aria-label=\"manufacturer\"\r\n                  name=\"manufacturer\"\r\n                  value={this.state.value}\r\n                  onChange={() => handleToUpdate(this.handleChange)}\r\n                  row\r\n                  >\r\n                  {manufacturer}            \r\n              </RadioGroup>\r\n          </FormControl>\r\n        </Paper>\r\n      );\r\n    }\r\n  }\r\n}\r\nManufacturer.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\nexport default withStyles(styles)(Manufacturer);","import React from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport MakesModels from '../data/makesModels.json';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        ...theme.mixins.gutters(),\r\n        padding: theme.spacing.unit * 2,\r\n    },\r\n});\r\n\r\nclass Floorplan extends React.Component {  \r\n    state = {\r\n        dieselOrGas: sessionStorage.getItem(\"dieselOrGas\"),      \r\n        value: sessionStorage.getItem(\"floorplan\"), \r\n        manufacturer: sessionStorage.getItem(\"manufacturer\"),\r\n        model: sessionStorage.getItem(\"model\"),\r\n        newOrPreowned: sessionStorage.getItem(\"newOrPreowned\"),\r\n        year: sessionStorage.getItem('year')\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({ value: event.target.value });\r\n        sessionStorage.setItem(\"floorplan\", event.target.value)\r\n      };\r\n\r\n    render() {\r\n        const { classes } = this.props;        \r\n        const handleToUpdate = this.props.handlerToUpdate;   \r\n        \r\n        if (this.state.dieselOrGas &&\r\n            this.state.manufacturer &&\r\n            this.state.year &&\r\n            this.state.model) {\r\n            const floorplans = MakesModels[this.state.dieselOrGas][this.state.manufacturer][this.state.year][this.state.model].map((floorplan, idx) => {                \r\n                return (    \r\n                    <FormControlLabel\r\n                        key={idx}\r\n                        value={floorplan}\r\n                        control={<Radio color=\"primary\" />}\r\n                        label={floorplan}\r\n                        labelPlacement=\"start\"\r\n                        onChange={this.handleChange}\r\n                    />\r\n                );\r\n                \r\n            })            \r\n            return (                \r\n                <Paper className={classes.root} elevation={1}>\r\n                    <Typography component={'span'} variant=\"h5\" >\r\n                        Select Floorplan\r\n                    </Typography>                \r\n                    <FormControl component=\"fieldset\">\r\n                        <RadioGroup\r\n                        aria-label=\"floorplan\"\r\n                        name=\"floorplan\"\r\n                        value={this.state.value}\r\n                        onChange={() => handleToUpdate(this.handleChange)}\r\n                        row\r\n                        >\r\n                        {floorplans}            \r\n                    </RadioGroup>\r\n                </FormControl>\r\n                </Paper>\r\n            );\r\n        }\r\n    }\r\n}\r\nFloorplan.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\nexport default withStyles(styles)(Floorplan);","import React from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport MakesModels from '../data/makesModels.json';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        ...theme.mixins.gutters(),\r\n        padding: theme.spacing.unit * 2,\r\n    },\r\n});\r\n\r\nclass Model extends React.Component {  \r\n     \r\n    state = {\r\n      dieselOrGas: sessionStorage.getItem(\"dieselOrGas\"),      \r\n      manufacturer: sessionStorage.getItem(\"manufacturer\"),\r\n      model: sessionStorage.getItem(\"model\"),\r\n      models: sessionStorage.getItem(\"dieselOrGas\") && sessionStorage.getItem(\"manufacturer\") && sessionStorage.getItem('year') ?\r\n        Object.keys(MakesModels[sessionStorage.getItem(\"dieselOrGas\")][sessionStorage.getItem(\"manufacturer\")][sessionStorage.getItem('year')]).map((model, idx) => {\r\n            return (\r\n                <FormControlLabel\r\n                    key={idx}\r\n                    value={model}\r\n                    control={<Radio color=\"primary\" />}\r\n                    label={model}\r\n                    labelPlacement=\"start\"\r\n                    onChange={this.handleChangeModel}\r\n                />\r\n            )\r\n        }) : '',\r\n      newOrPreowned: sessionStorage.getItem(\"newOrPreowned\"),\r\n      year: sessionStorage.getItem('year')\r\n    };\r\n\r\n    handleChangeYear = event => {        \r\n        if (this.state.dieselOrGas &&\r\n            this.state.manufacturer && \r\n            event.target.value) {\r\n            this.setState({ year: event.target.value });\r\n            sessionStorage.setItem(\"year\", event.target.value)        \r\n            const handleToUpdate = this.props.handlerToUpdate;    \r\n        \r\n            this.setState({ \r\n                models:  Object.keys(MakesModels[this.state.dieselOrGas][this.state.manufacturer][event.target.value]).map((model, idx) => {\r\n                    return (\r\n                        <FormControlLabel\r\n                            key={idx}\r\n                            value={model}\r\n                            control={<Radio color=\"primary\" />}\r\n                            label={model}\r\n                            labelPlacement=\"start\"\r\n                            onChange={() => handleToUpdate(this.handleChangeModel)}\r\n                        />\r\n                    )\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChangeModel = event => {\r\n        console.log('handle change model')\r\n        this.setState({ model: event.target.value });\r\n        sessionStorage.setItem(\"model\", event.target.value)\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props; \r\n        var model = (\r\n            <FormControl component=\"fieldset\">\r\n                <RadioGroup \r\n                    aria-label=\"model\"\r\n                    name=\"model\"\r\n                    value={this.state.model}\r\n                    onChange={this.handleChangeModel}\r\n                    row\r\n                >\r\n                    {this.state.models}\r\n                </RadioGroup>\r\n            </FormControl>\r\n        )\r\n    \r\n        return (\r\n        <Paper className={classes.root} elevation={1}>\r\n            <Typography component={'span'} variant=\"h5\" >\r\n                Select your Model\r\n            </Typography>\r\n             <FormControl component=\"fieldset\">\r\n                <RadioGroup\r\n                    aria-label=\"year\"\r\n                    name=\"year\"\r\n                    value={this.state.year}\r\n                    onChange={this.handleChangeYear}\r\n                    row\r\n                >\r\n                <FormControlLabel\r\n                    value=\"2019\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label=\"2019\"\r\n                    labelPlacement=\"start\"\r\n                />          \r\n                <FormControlLabel\r\n                    value=\"2018\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label=\"2018\"\r\n                    labelPlacement=\"start\"\r\n                />\r\n                </RadioGroup>                \r\n            </FormControl><br/>\r\n            {model}\r\n        </Paper>\r\n        );\r\n    }    \r\n}\r\nModel.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\nexport default withStyles(styles)(Model);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NewOrPreowned from './newOrPreowned';\r\nimport DieselOrGas from './dieselOrGas';\r\nimport Manufacturer from './manufacturer';\r\nimport Floorplan from './floorplan';\r\nimport Model from './model';\r\nimport { withRouter } from \"react-router\";\r\n\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '90%',\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing.unit,\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing.unit,\r\n    marginBottom: theme.spacing.unit,\r\n  },\r\n});\r\n\r\nclass HorizontalLinearStepper extends React.Component {\r\n  state = {\r\n    activeStep: 0,\r\n    skipped: new Set()\r\n    // nextStepDisabled: sessionStorage.getItem(\"newOrPreowned\") === null,\r\n    // dieselOrGas: sessionStorage.getItem(\"dieselOrGas\"),      \r\n    // value: sessionStorage.getItem(\"floorplan\"), \r\n    // manufacturer: sessionStorage.getItem(\"manufacturer\"),\r\n    // model: sessionStorage.getItem(\"model\"),\r\n    // newOrPreowned: sessionStorage.getItem(\"newOrPreowned\"),\r\n    // year: sessionStorage.getItem('year')\r\n  }\r\n\r\n  isNewOrPreowned = step => {\r\n    return step === 0\r\n  }\r\n\r\n  isStepOptional = step => {\r\n    return false\r\n  }\r\n\r\n  handleCard = () => {\r\n    this.props.history.push('/card/' + \r\n      sessionStorage.getItem(\"dieselOrGas\") + \"/\" + \r\n      sessionStorage.getItem(\"manufacturer\").replace(/\\s/g,'') + \"/\" + \r\n      sessionStorage.getItem('year') + \"/\" +\r\n      sessionStorage.getItem('model').replace(/\\s/g,'') + \"/\" +\r\n      sessionStorage.getItem('floorplan'))\r\n  }\r\n\r\n  handleNext = () => {\r\n    const { activeStep } = this.state\r\n    let { skipped } = this.state\r\n    if (this.isStepSkipped(activeStep)) {\r\n      skipped = new Set(skipped.values())\r\n      skipped.delete(activeStep)\r\n    }\r\n    this.setState({\r\n      activeStep: activeStep + 1,\r\n      skipped,\r\n    })\r\n    this.setNextStepDisabled(activeStep + 1)\r\n  }\r\n\r\n  handleBack = () => {\r\n    this.setState(state => ({\r\n      activeStep: state.activeStep - 1,\r\n    }));\r\n  };\r\n\r\n  handleEnableNextStep = () => {\r\n    this.setState(state => ({\r\n      nextStepDisabled: false\r\n    }));\r\n  }\r\n\r\n  handleSkip = () => {\r\n    const { activeStep } = this.state;\r\n    if (!this.isStepOptional(activeStep)) {\r\n      // You probably want to guard against something like this,\r\n      // it should never occur unless someone's actively trying to break something.\r\n      throw new Error(\"You can't skip a step that isn't optional.\");\r\n    }\r\n\r\n    this.setState(state => {\r\n      const skipped = new Set(state.skipped.values());\r\n      skipped.add(activeStep);\r\n      return {\r\n        activeStep: state.activeStep + 1,\r\n        skipped,\r\n      };\r\n    });\r\n  };\r\n\r\n  handleReset = () => {\r\n    this.setState({\r\n      activeStep: 0,\r\n    });\r\n  };\r\n\r\n\r\n  isStepSkipped(step) {\r\n    return this.state.skipped.has(step);\r\n  }\r\n\r\n  setNextStepDisabled(step) {\r\n    switch (step) {\r\n      case 0:\r\n        if (!this.state.nextStepDisabled && sessionStorage.getItem(\"newOrPreowned\") === null) {\r\n          this.setState({nextStepDisabled: true})\r\n        } \r\n        else if (this.state.nextStepDisabled && sessionStorage.getItem(\"newOrPreowned\") !== null) {\r\n          this.setState({nextStepDisabled: false})\r\n        }               \r\n        break;\r\n      case 1:        \r\n        if (!this.state.nextStepDisabled && sessionStorage.getItem(\"dieselOrGas\") === null) {         \r\n          this.setState({nextStepDisabled: true})\r\n        }\r\n        else if (this.state.nextStepDisabled && sessionStorage.getItem(\"dieselOrGas\") !== null) {\r\n          this.setState({nextStepDisabled: false})\r\n        }\r\n        break;\r\n      case 2:      \r\n        if (!this.state.nextStepDisabled && sessionStorage.getItem(\"manufacturer\") === null) {\r\n           this.setState({nextStepDisabled: true})\r\n        }\r\n        else if (this.state.nextStepDisabled && sessionStorage.getItem(\"manufacturer\") !== null) {\r\n          this.setState({nextStepDisabled: false})\r\n        }\r\n        break\r\n      case 3:        \r\n        if (!this.state.nextStepDisabled && sessionStorage.getItem(\"model\") === null) {\r\n          this.setState({nextStepDisabled: true})\r\n        }\r\n        else if (this.state.nextStepDisabled && sessionStorage.getItem(\"model\") !== null) {\r\n          this.setState({nextStepDisabled: false})\r\n        }\r\n        break        \r\n      default: return false\r\n    }\r\n  }\r\n  getSteps = () => {\r\n    return ['Select New or Pre-Order', 'Select Diesel or Gas', 'Which Manufacturer', 'Select your Model', 'Select Floorplan'];\r\n  }\r\n\r\n\r\n  getStepContent = (step) => {\r\n    switch (step) {\r\n      case 0:\r\n        return <NewOrPreowned handlerToUpdate = {this.handleEnableNextStep} />;\r\n      case 1:\r\n        return <DieselOrGas handlerToUpdate = {this.handleEnableNextStep} />;\r\n      case 2:\r\n        return <Manufacturer handlerToUpdate = {this.handleEnableNextStep} />;\r\n      case 3:\r\n        return <Model handlerToUpdate = {this.handleEnableNextStep} />;\r\n      case 4:\r\n        return <Floorplan handlerToUpdate = {this.handleEnableNextStep} />\r\n      default:\r\n        return ''\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const steps = this.getSteps();\r\n    const { activeStep } = this.state;   \r\n    //this.setNextStepDisabled(activeStep)\r\n    return (\r\n      <div className={classes.root}>\r\n        <Stepper activeStep={activeStep} >\r\n          {steps.map((label, index) => {\r\n            const props = {};\r\n            const labelProps = {};\r\n            if (this.isStepOptional(index)) {\r\n              labelProps.optional = <Typography variant=\"caption\">Optional</Typography>;\r\n            }\r\n            if (this.isStepSkipped(index)) {\r\n              props.completed = false;\r\n            }\r\n            // if (this.isNewOrPreowned(index)) {\r\n            //   form = <NewOrPreowned />\r\n            // }\r\n            return (\r\n              <Step key={label} {...props}>\r\n                <StepLabel {...labelProps}>{label}</StepLabel>                \r\n              </Step>\r\n            );\r\n          })}\r\n        </Stepper>\r\n        <div>\r\n          {activeStep === steps.length ? (\r\n            <div>\r\n              <Typography component={'span'}  className={classes.instructions}>\r\n                All steps completed - you&apos;re finished\r\n              </Typography>\r\n              <Button onClick={this.handleReset} className={classes.button}>\r\n                Reset\r\n              </Button>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <Typography component={'span'}  className={classes.instructions}>{this.getStepContent(activeStep)}</Typography>\r\n              <div>\r\n                <Button\r\n                  disabled={activeStep === 0}\r\n                  onClick={this.handleBack}\r\n                  className={classes.button}\r\n                >\r\n                  Back\r\n                </Button>\r\n                {this.isStepOptional(activeStep) && (\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={this.handleSkip}\r\n                    className={classes.button}\r\n                  >\r\n                    Skip\r\n                  </Button>\r\n                )}\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={activeStep === steps.length - 1 ? this.handleCard :this.handleNext}\r\n                  className={classes.button}\r\n                  disabled={this.state.nextStepDisabled}\r\n                >\r\n                  {activeStep === steps.length - 1 ? 'See RV card' : 'Next'}\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nHorizontalLinearStepper.propTypes = {\r\n  classes: PropTypes.object,\r\n};\r\n\r\nexport default withRouter(withStyles(styles)(HorizontalLinearStepper));","import React, { Component } from 'react';\r\nimport Stepper from '../components/stepper';\r\n\r\nclass Home extends Component {\r\n    render() {\r\n      return (\r\n        <div>\r\n          <Stepper />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default Home;","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport PropTypes from 'prop-types';\r\nimport Select from '@material-ui/core/Select';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport pink from '@material-ui/core/colors/pink';\r\nimport purple from '@material-ui/core/colors/purple';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    ...theme.mixins.gutters(),\r\n    padding: theme.spacing.unit * 2,\r\n    \r\n  },\r\n  formControl: {\r\n    margin: theme.spacing.unit,\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing.unit * 2,\r\n  },\r\n  colorSwitchBase: {\r\n    color: purple[300],\r\n    '&$colorChecked': {\r\n      color: purple[500],\r\n      '& + $colorBar': {\r\n        backgroundColor: purple[500],\r\n      },\r\n    },\r\n  },\r\n  colorBar: {},\r\n  colorChecked: {},\r\n  iOSSwitchBase: {\r\n    '&$iOSChecked': {\r\n      color: theme.palette.common.white,\r\n      '& + $iOSBar': {\r\n        backgroundColor: blue[500],\r\n      },\r\n    },\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n      easing: theme.transitions.easing.sharp,\r\n    }),\r\n  },\r\n  iOSChecked: {\r\n    transform: 'translateX(15px)',\r\n    '& + $iOSBar': {\r\n      opacity: 1,\r\n      border: 'none',\r\n    },\r\n  },\r\n  iOSBar: {\r\n    borderRadius: 13,\r\n    width: 42,\r\n    height: 26,\r\n    marginTop: -13,\r\n    marginLeft: -21,\r\n    border: 'solid 1px',\r\n    borderColor: blue[400],\r\n    backgroundColor: pink[500],\r\n    opacity: 1,\r\n    transition: theme.transitions.create(['background-color', 'border']),\r\n  },\r\n  iOSIcon: {\r\n    width: 24,\r\n    height: 24,\r\n  },\r\n  iOSIconChecked: {\r\n    boxShadow: theme.shadows[1],\r\n  },\r\n});\r\n\r\nclass Card extends Component {\r\n  state = {\r\n    exteriorColor: '',\r\n    interiorColor: '',\r\n    checkedBed: true,\r\n    checkedHeater: true\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  handleChangeSwitch = name => event => {\r\n    this.setState({ [name]: event.target.checked });\r\n    \r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props; \r\n    var parser = document.createElement('a');\r\n    parser.href = window.location.href;\r\n    // parser.protocol; // => \"http:\"\r\n    // parser.hostname; // => \"example.com\"\r\n    // parser.port;     // => \"3000\"\r\n    // parser.pathname; // => \"/pathname/\"\r\n    // parser.search;   // => \"?search=test\"\r\n    // parser.hash;     // => \"#hash\"\r\n    // parser.host;     // => \"example.com:3000\"\r\n    parser.pathname.split('/').splice(2)\r\n    let paths = parser.pathname.split('/').splice(2);\r\n    return (\r\n        <Paper className={classes.root} elevation={1}>\r\n          <Typography component={'span'} variant=\"h5\" >\r\n          {         \r\n            paths.map((path, idx) => {\r\n              if (idx === paths.length - 1) \r\n                return path          \r\n              else \r\n                return path.replace(/([A-Z])/g, ' $1').trim() + ' ';\r\n            })\r\n          }\r\n          </Typography>    \r\n          <form className={classes.root} autoComplete=\"off\">\r\n          <Grid container spacing={24}>\r\n            <Grid item xs={6}>\r\n              <Paper className={classes.paper}>\r\n                <FormControl className={classes.formControl}>\r\n                  <InputLabel htmlFor=\"interiorColor\">interior color</InputLabel>\r\n                  <Select\r\n                    value={this.state.interiorColor}\r\n                    onChange={this.handleChange}\r\n                    inputProps={{\r\n                      name: 'interiorColor',\r\n                      id: 'interiorColor',\r\n                    }}\r\n                  >\r\n                    <MenuItem value=\"\">\r\n                      <em>None</em>\r\n                    </MenuItem>\r\n                    <MenuItem value=\"blue\">Blue</MenuItem>\r\n                    <MenuItem value=\"green\">Green</MenuItem>\r\n                    <MenuItem value=\"red\">Red</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Paper>\r\n            </Grid>\r\n            \r\n            <Grid item xs={6}>\r\n              <Paper className={classes.paper}>\r\n                <FormControl className={classes.formControl}>\r\n                  <InputLabel htmlFor=\"exteriorColor\">exterior color</InputLabel>\r\n                  <Select\r\n                    value={this.state.exteriorColor}\r\n                    onChange={this.handleChange}\r\n                    inputProps={{\r\n                      name: 'exteriorColor',\r\n                      id: 'exteriorColor',\r\n                    }}\r\n                  >\r\n                    <MenuItem value=\"\">\r\n                      <em>None</em>\r\n                    </MenuItem>\r\n                    <MenuItem value=\"blue\">Blue</MenuItem>\r\n                    <MenuItem value=\"green\">Green</MenuItem>\r\n                    <MenuItem value=\"red\">Red</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Paper className={classes.paper}>\r\n              <FormLabel component=\"legend\">Bed</FormLabel>\r\n              <FormControlLabel \r\n                control={\r\n                  <Switch\r\n                    classes={{\r\n                      switchBase: classes.iOSSwitchBase,\r\n                      bar: classes.iOSBar,\r\n                      icon: classes.iOSIcon,\r\n                      iconChecked: classes.iOSIconChecked,\r\n                      checked: classes.iOSChecked,\r\n                    }}\r\n                    \r\n                    disableRipple\r\n                    checked={this.state.checkedBed}\r\n                    onChange={this.handleChangeSwitch('checkedBed')}\r\n                    value=\"checkedBed\"\r\n                  />\r\n                }\r\n              label={this.state.checkedBed ? 'King' : 'Queen'}\r\n              labelPlacement={this.state.checkedBed ? 'start' : 'end'}\r\n              />\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Paper className={classes.paper}>\r\n                <FormLabel component=\"legend\">Water Heater System</FormLabel>\r\n                <FormControlLabel \r\n                control={\r\n                  <Switch\r\n                    classes={{\r\n                      switchBase: classes.iOSSwitchBase,\r\n                      bar: classes.iOSBar,\r\n                      icon: classes.iOSIcon,\r\n                      iconChecked: classes.iOSIconChecked,\r\n                      checked: classes.iOSChecked,\r\n                    }}\r\n                    \r\n                    disableRipple\r\n                    checked={this.state.checkedHeater}\r\n                    onChange={this.handleChangeSwitch('checkedHeater')}\r\n                    value=\"checkedHeater\"\r\n                  />\r\n                }\r\n              label={this.state.checkedHeater ? 'Tank' : 'Tankless'}\r\n              labelPlacement={this.state.checkedHeater ? 'start' : 'end'}\r\n              />\r\n              </Paper>\r\n            </Grid>\r\n            \r\n          </Grid>\r\n          </form>\r\n          \r\n        </Paper> \r\n    );\r\n  }\r\n}\r\n  \r\nCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\nexport default withStyles(styles)(Card);","import React, { Component } from 'react';\nimport logo from './img/white-logo.png';\nimport './App.css';\nimport Home from './pages/home';\nimport Card from './pages/card';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          </header>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/card\" component={Card} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}